The feature
https://cwiki.apache.org/confluence/display/KAFKA/KIP-925%3A+Rack+aware+task+assignment+in+Kafka+Streams

Start the docker Cluster
docker compose up

Create the input topic
./kafka-topics.sh --bootstrap-server localhost:9091 --topic input-topic --create --partitions 9 --replication-factor 3

Create the output topic
./kafka-topics.sh --bootstrap-server localhost:9091 --topic output-topic --create --partitions 9 --replication-factor 3

Start a Console Consumer to see the comparison results
./kafka-console-consumer.sh --bootstrap-server localhost:9091 --topic output-topic

Start some kafka stream instances in different racks (Processor API based)
mvn clean package

java -jar target/processor-api-stdout-app-1.0-SNAPSHOT-shaded.jar client-1 rack-1
java -jar target/processor-api-stdout-app-1.0-SNAPSHOT-shaded.jar client-2 rack-2
java -jar target/processor-api-stdout-app-1.0-SNAPSHOT-shaded.jar client-3 rack-3

Start a Console Producer to generate some messages as Processor's triggers
./kafka-console-producer.sh --bootstrap-server localhost:9091 --topic input-topic --property parse.key=true --property key.separator=,

./kafka-producer-perf-test.sh --topic input-topic --num-records 20000000 --record-size 1000 --throughput 10000000 --producer-props bootstrap.servers=localhost:9091

Exit
kill the cli tools
kill the kafka streams instances
docker compose down -v
